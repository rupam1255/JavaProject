/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.SystemAdmin;

import Business.EcoSystem;
import Business.Enterprise.ConsumerEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Person.Person;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rupam Tiwari
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    JPanel sequencer;
    EcoSystem system;
    Organization organization;
    ManageEnterpriseJPanel(JPanel sequencer, Organization organization,EcoSystem system) {
        initComponents();
        this.sequencer=sequencer;
        this.system=system;
        this.organization = organization;
        
        populateNetworkComboBox();
        populateUserAccountTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panelDescriptionJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountJTable = new javax.swing.JTable();
        networkJLabel = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox<>();
        chooseNetworkJLabel = new javax.swing.JLabel();
        chooseEnterpriseJLabel = new javax.swing.JLabel();
        enterpriseJLabel = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox<>();
        enterpriseNameJLabel = new javax.swing.JLabel();
        enterpriseAdminName = new javax.swing.JTextField();
        userNameJLabel = new javax.swing.JLabel();
        userNameJTextField = new javax.swing.JTextField();
        passwordJLabel = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        confirmPasswordJLabel = new javax.swing.JLabel();
        confirmPasswordJPasswordField = new javax.swing.JPasswordField();
        function2JLabel = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        resetJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        roleJLabel = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox<>();

        panelDescriptionJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        panelDescriptionJLabel.setText("Manage Enterprise Admin Accounts");

        userAccountJTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        userAccountJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Network", "Enterprise", "User Name"
            }
        ));
        userAccountJTable.setRowHeight(25);
        jScrollPane1.setViewportView(userAccountJTable);

        networkJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        networkJLabel.setText("Network");

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>());
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });

        chooseNetworkJLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chooseNetworkJLabel.setText("Choose Network:");

        chooseEnterpriseJLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chooseEnterpriseJLabel.setText("Choose Enterprise:");

        enterpriseJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        enterpriseJLabel.setText("Enterprise");

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>());
        enterpriseJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseJComboBoxActionPerformed(evt);
            }
        });

        enterpriseNameJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        enterpriseNameJLabel.setText("Enterprise Admin Name");

        userNameJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        userNameJLabel.setText("User Name");

        passwordJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        passwordJLabel.setText("Password");

        confirmPasswordJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        confirmPasswordJLabel.setText("Confirm Password");

        function2JLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        function2JLabel.setText("Display of created User Accounts");

        submitJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        resetJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        resetJButton.setText("Reset");
        resetJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetJButtonActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        removeJButton.setText("Remove User Account");
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        roleJLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        roleJLabel.setText("Role");

        roleJComboBox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        roleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleJComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(function2JLabel)
                            .addComponent(panelDescriptionJLabel)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chooseNetworkJLabel)
                                    .addComponent(chooseEnterpriseJLabel))
                                .addGap(65, 65, 65)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterpriseJLabel)
                                    .addComponent(networkJLabel)
                                    .addComponent(enterpriseNameJLabel)
                                    .addComponent(userNameJLabel)
                                    .addComponent(passwordJLabel)
                                    .addComponent(confirmPasswordJLabel)
                                    .addComponent(roleJLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(submitJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(passwordJPasswordField)
                                    .addComponent(enterpriseAdminName)
                                    .addComponent(networkJComboBox, 0, 100, Short.MAX_VALUE)
                                    .addComponent(enterpriseJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(userNameJTextField)
                                    .addComponent(confirmPasswordJPasswordField)
                                    .addComponent(roleJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(resetJButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeJButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDescriptionJLabel)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(chooseNetworkJLabel)
                        .addGap(18, 18, 18)
                        .addComponent(chooseEnterpriseJLabel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(networkJLabel)
                            .addComponent(networkJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterpriseJLabel)
                            .addComponent(enterpriseJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterpriseNameJLabel)
                            .addComponent(enterpriseAdminName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameJLabel)
                            .addComponent(userNameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordJLabel)
                            .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(confirmPasswordJLabel)
                            .addComponent(confirmPasswordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roleJLabel)
                    .addComponent(roleJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetJButton)
                    .addComponent(submitJButton))
                .addGap(26, 26, 26)
                .addComponent(function2JLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(removeJButton))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        // TODO add your handling code here:
        Network network = (Network) networkJComboBox.getSelectedItem();

        if (network != null) {
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void enterpriseJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseJComboBoxActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

        if (enterprise != null) {
            
            populateRoleComboBox(enterprise);
        }
    }//GEN-LAST:event_enterpriseJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        String entAdminName = enterpriseAdminName.getText();
        String userName = userNameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String confirmPassword = String.valueOf(confirmPasswordJPasswordField.getPassword());

        if (entAdminName.trim().equals("")
            || userName.trim().equals("")
            || password.trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Kindly fill proper inputs!");
            return;
        }

        if (!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(null, "Password does not match!");
            return;
        }

        for (Network network : system.getNetworkDirectory()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                Boolean isUserNameUsed = enterprise.getUserAccountDirectory().checkUserAccountAvailability(userName);
                if (isUserNameUsed == true) {
                    JOptionPane.showMessageDialog(null, "User Name Already in use!");
                    return;
                }
            }
        }

        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        int userAccountListSize = enterprise.getUserAccountDirectory().getUserAccountList().size();
        if (userAccountListSize > 0) {
            JOptionPane.showMessageDialog(null, "User Account already exist for the selected enterprise. Only one account can "
                + "be created for an enterprise");
            return;
        }

        if (enterprise != null) {
            Person person = enterprise.getPersonDirectory().addAndCreatePerson(entAdminName);
            
            Role role = (Role) roleJComboBox.getSelectedItem();

            UserAccount userAccount = enterprise.getUserAccountDirectory().
            createAndAddUserAccount(userName, password, role, person);
            populateUserAccountTable();
            reset();
            JOptionPane.showMessageDialog(null, "User Account created!");
        }
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void resetJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetJButtonActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_resetJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        sequencer.remove(this);
        CardLayout layout = (CardLayout) sequencer.getLayout();
        layout.previous(sequencer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = userAccountJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Select a row to be deleted!");
            return;
        }

        Enterprise enterprise = (Enterprise) userAccountJTable.getValueAt(selectedRow, 1);
        UserAccount userAccount = (UserAccount) userAccountJTable.getValueAt(selectedRow, 2);

        enterprise.getUserAccountDirectory().removeUserAccount(userAccount);
        Person person = userAccount.getPerson();
        enterprise.getPersonDirectory().removePerson(person);
        populateUserAccountTable();
        JOptionPane.showMessageDialog(null, "User Account removed!");
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void roleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel chooseEnterpriseJLabel;
    private javax.swing.JLabel chooseNetworkJLabel;
    private javax.swing.JLabel confirmPasswordJLabel;
    private javax.swing.JPasswordField confirmPasswordJPasswordField;
    private javax.swing.JTextField enterpriseAdminName;
    private javax.swing.JComboBox<Enterprise> enterpriseJComboBox;
    private javax.swing.JLabel enterpriseJLabel;
    private javax.swing.JLabel enterpriseNameJLabel;
    private javax.swing.JLabel function2JLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Network> networkJComboBox;
    private javax.swing.JLabel networkJLabel;
    private javax.swing.JLabel panelDescriptionJLabel;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton removeJButton;
    private javax.swing.JButton resetJButton;
    private javax.swing.JComboBox<Role> roleJComboBox;
    private javax.swing.JLabel roleJLabel;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTable userAccountJTable;
    private javax.swing.JLabel userNameJLabel;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables

     public void populateNetworkComboBox() {
       networkJComboBox.removeAllItems();
        for (Network network : system.getNetworkDirectory()) {
            networkJComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            
                enterpriseJComboBox.addItem(enterprise);
            
        }
    }

    private void populateRoleComboBox(Enterprise enterprise) {
        if (enterprise != null) {
            roleJComboBox.removeAllItems();

            for (Role role : enterprise.getSupportedRole()) {
                roleJComboBox.addItem(role);
            }
        }
    }
     public void reset() {
        enterpriseAdminName.setText("");
        userNameJTextField.setText("");
        passwordJPasswordField.setText("");
        confirmPasswordJPasswordField.setText("");
        //networkJComboBox.setSelectedIndex();
        //enterpriseJComboBox.setSelectedIndex(0);
        //roleJComboBox.setSelectedIndex(0);
    }
    
    
    public void populateUserAccountTable() {
        DefaultTableModel model = (DefaultTableModel) userAccountJTable.getModel();
        model.setRowCount(0);
        boolean consumerEnterpriseFlag=false;

        for (Network network : system.getNetworkDirectory()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
              if(enterprise instanceof ConsumerEnterprise){
                  if(!consumerEnterpriseFlag){
                    for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                        Object row[] = new Object[3];
                        row[0] = network;
                        row[1] = enterprise;
                        row[2] = userAccount;
                        model.addRow(row);
                    }
                    consumerEnterpriseFlag=true;
                  }
              }else{
                    for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                        Object row[] = new Object[3];
                        row[0] = network;
                        row[1] = enterprise;
                        row[2] = userAccount;
                        model.addRow(row);
                    }
              }
                  
                
            }
        }
    }
}
